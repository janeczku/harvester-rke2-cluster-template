apiVersion: provisioning.cattle.io/v1
kind: Cluster
metadata:
  {{- if .Values.cluster.labels }}
  labels:
{{ toYaml .Values.cluster.labels | indent 4 }}
  {{- end }}
  {{- if .Values.cluster.annotations }}
  annotations:
{{ toYaml .Values.cluster.annotations | indent 4 }}
  {{- end }} 
  name: {{ .Values.cluster.name }}
  namespace: fleet-default
spec:
  cloudCredentialSecretName: {{ .Values.cloudCredentialSecretName }}
  {{- if .Values.cluster.kubernetesVersion }}
  kubernetesVersion: {{ .Values.cluster.kubernetesVersion }}
  {{- end }}
  {{- if .Values.cluster.defaultPodSecurityPolicyTemplateName }}
  defaultPodSecurityPolicyTemplateName: {{ .Values.cluster.defaultPodSecurityPolicyTemplateName }}
  {{- end }}
  # enable network policy
  enableNetworkPolicy: false
  # specify rancher helm chart values deployed into downstream cluster
  # rancherValues: {}
  rkeConfig:
    # Any custom YAML manifest, e.g. ingress service type loadBalancer
    # AdditionalManifest: ""
    # etcd: {disableSnapshots: false, s3: null, snapshotRetention: 5, snapshotScheduleCron: "0 */5 * * *"}
    #   disableSnapshots: false
    #   s3: null
    #   snapshotRetention: 5
    #   snapshotScheduleCron: "0 */5 * * *"
    # chartValues:
    #   rke2-ingress-nginx:
    #     controller:
    #       dnsPolicy: ClusterFirst
    #       hostNetwork: false
    #       hostPort:
    #         enabled: false
    #       publishService:
    #         enabled: true
    #       kind: Deployment
    #       replicaCount: 2
    #       service:
    #         enabled: true
    #   rke2-calico:
    #     calicoctl:
    #       image: "rancher/mirrored-calico-ctl"
    #       tag: "v3.19.2"
    #     certs:
    #       node:
    #         cert: null
    #         commonName: null
    #         key: null
    #       typha:
    #         caBundle: null
    #         cert: null
    #         commonName: null
    #         key: null
    #     felixConfiguration:
    #       featureDetectOverride: "ChecksumOffloadBroken=true"
    #     global:
    #       clusterCIDRv4: ""
    #       clusterCIDRv6: ""
    #       systemDefaultRegistry: ""
    #     imagePullSecrets: {}
    #     installation:
    #       calicoNetwork:
    #         bgp: "Disabled"
    #         ipPools:
    #         - blockSize: 24
    #           cidr: "10.42.0.0/16"
    #           encapsulation: "VXLAN"
    #           natOutgoing: "Enabled"
    #       controlPlaneTolerations:
    #       - effect: "NoSchedule"
    #         key: "node-role.kubernetes.io/control-plane"
    #         operator: "Exists"
    #       - effect: "NoExecute"
    #         key: "node-role.kubernetes.io/etcd"
    #         operator: "Exists"
    #       enabled: true
    #       imagePath: "rancher"
    #       imagePrefix: "mirrored-calico-"
    #       kubernetesProvider: ""
    #     ipamConfig:
    #       autoAllocateBlocks: true
    #       strictAffinity: true
    #     tigeraOperator:
    #       image: "rancher/mirrored-calico-operator"
    #       registry: "docker.io"
    #       version: "v1.17.6"
    machinePools:
    {{- if .Values.nodepools }} {{ range $index, $nodepool := .Values.nodepools }}
    - controlPlaneRole: {{ $nodepool.controlplane }}
      etcdRole: {{ $nodepool.etcd }}
      workerRole: {{ $nodepool.worker }}
      quantity: {{ $nodepool.quantity }}
      name: {{ $nodepool.name }}
      machineConfigRef:
        kind: HarvesterConfig
        name: {{ $nodepool.name }}
      paused: {{ $nodepool.paused }}
      displayName: {{ $nodepool.displayName }}
      {{- if $nodepool.rollingUpdate }}
      rollingUpdate: 
        maxUnavailable: {{ $nodepool.rollingUpdate.maxUnavailable }}
        maxSurge: {{ $nodepool.rollingUpdate.maxSurge }}
      {{- end }}
      {{- if $nodepool.machineDeploymentLabels }}
      machineDeploymentLabels: 
{{ toYaml $nodepool.machineDeploymentLabels | indent 8 }}
      {{- end }}
      {{- if $nodepool.machineDeploymentAnnotations }}
      machineDeploymentAnnotations: 
{{ toYaml $nodepool.machineDeploymentAnnotations | indent 8 }}
      {{- end }}
      {{- end }}
      {{- end }}
    machineGlobalConfig:
      cni: "calico"
      disable-kube-proxy: false
      etcd-expose-metrics: false
      # Path to the file that defines the audit policy configuration
      # audit-policy-file: ""
      # IPv4/IPv6 network CIDRs to use for pod IPs (default: 10.42.0.0/16)
      # cluster-cidr: ""
      # IPv4 Cluster IP for coredns service. Should be in your service-cidr range (default: 10.43.0.10)
      # cluster-dns: ""
      # Cluster Domain (default: "cluster.local")
      # cluster-domain: ""
      # CNI Plugin to deploy, one of none, canal, cilium (default: "canal")
      # cni: calico
      # Do not deploy packaged components and delete any deployed components (valid items: rke2-coredns, rke2-ingress-nginx, rke2-kube-proxy, rke2-metrics-server)
      # disable: false
      # Disable automatic etcd snapshots
      # etcd-disable-snapshots: false
      # Expose etcd metrics to client interface. (Default false)
      # etcd-expose-metrics: false
      # Directory to save db snapshots. (Default location: ${data-dir}/db/snapshots)
      # etcd-snapshot-dir: ""
      # Set the base name of etcd snapshots. Default: etcd-snapshot-<unix-timestamp> (default: "etcd-snapshot")
      # etcd-snapshot-name: ""
      # Number of snapshots to retain (default: 5)
      # etcd-snapshot-retention: 5
      # Snapshot interval time in cron spec. eg. every 5 hours '* */5 * * *' (default: "0 */12 * * *")
      # etcd-snapshot-schedule-cron: "0 */12 * * *"
      # Customized flag for kube-apiserver process
      # kube-apiserver-arg: ""
      # Customized flag for kube-scheduler process
      # kube-scheduler-arg: ""
      # Customized flag for kube-controller-manager process
      # kube-controller-manager-arg: ""
      # Validate system configuration against the selected benchmark (valid items: cis-1.5, cis-1.6 )
      # profile: "cis-1.6"
      # Enable Secret encryption at rest
      # secrets-encryption: false
      # IPv4/IPv6 network CIDRs to use for service IPs (default: 10.43.0.0/16)
      # service-cidr: "10.43.0.0/16"
      # Port range to reserve for services with NodePort visibility (default: "30000-32767")
      # service-node-port-range: "30000-32767"
      # Add additional hostnames or IPv4/IPv6 addresses as Subject Alternative Names on the server TLS cert
      # tls-san: []
    machineSelectorConfig:
      - config:
        # Node name
        # node-name: ""
        # Disable embedded containerd and use alternative CRI implementation
        # container-runtime-endpoint: ""
        # Override default containerd snapshotter (default: "overlayfs")
        # snapshotter: ""
        # IP address to advertise for node
        # node-ip: "1.1.1.1"
        # Kubelet resolv.conf file
        # resolv-conf: ""
        # Customized flag for kubelet process
        # kubelet-arg: ""
        # Customized flag for kube-proxy process
        # kube-proxy-arg: ""
        # Kernel tuning behavior. If set, error if kernel tunables are different than kubelet defaults. (default: false)
        protect-kernel-defaults: false
        # Enable SELinux in containerd (default: false)
        # selinux: true
        # Cloud provider Configuration
        {{- if .Values.cloudProviderConfig }}
        cloud-provider-name: "harvester"
        cloud-provider-config: {{ .Values.cloudProviderConfig }}
        {{- end }}
    {{- if .Values.cluster.localClusterAuthEndpoint.enabled }} 
    localClusterAuthEndpoint:
      enabled: {{ .Values.cluster.localClusterAuthEndpoint.enabled }}
      fqdn: {{ .Values.cluster.localClusterAuthEndpoint.fqdn }}
      caCerts: {{ .Values.cluster.localClusterAuthEndpoint.caCerts }}
    {{- end }}
    # registries:
      # configs:
        # example.registry.com:
          # insecureSkipVerify: true
          # Auth contains information to authenticate to the registry.
          # authConfigSecretName: ""
    #  mirrors:
    upgradeStrategy:
      controlPlaneDrainOptions: 
        enabled: false
        # deleteEmptyDirData: false
        # disableEviction: false
        # gracePeriod: 0
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 0
      workerDrainOptions:
        enabled: false
        # deleteEmptyDirData: false
        # disableEviction: false
        # gracePeriod: 0
        # ignoreErrors: false
        # skipWaitForDeleteTimeoutSeconds: 0
        # timeout: 0
      workerConcurrency: "10%"
      controlPlaneConcurrency: "10%"
{{- if .Values.agentEnvs }}
  agentEnvVars:
{{ toYaml .Values.agentEnvs | indent 4 }}
{{- end }}
